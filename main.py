import logging
import telebot
from functions.function_hello_get import *
from functions.valuti import *
from sq_connets.sqlte_connect_files import *
import datetime


logging.basicConfig(level=logging.INFO)

bot = telebot.TeleBot('6040960208:AAEwPLomCRMCqtCAtQzKfl1tSh8jq7nYV1Y')


@bot.message_handler(commands=['start'])
def register_user(message):
    cursor.execute('SELECT * FROM users WHERE tg_id=?', (message.from_user.id,))
    user = cursor.fetchone()
    user_id_name = message.from_user

    if user is None:
        bot.send_message(message.chat.id, f'{return_time()}, {user_id_name.first_name}! –î–∞–≤–∞–π—Ç–µ –ø—Ä–æ–π–¥–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é.\n'
                                          f'–í–≤–µ–¥–∏ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å–≤–æ–π –±—é–¥–∂–µ—Ç –Ω–∞ –º–µ—Å—è—Ü: ')

        bot.register_next_step_handler(message, process_budget_step)

    else:
        bot.send_message(message.chat.id, '–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!')


def process_budget_step(message):
    try:
        budget = int(message.text)

        registration_date = datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')
        cursor.execute('''  
            INSERT INTO users (tg_id, budget, expense,
             last_purchase, registration_date, last_update_date, is_registered)
            VALUES (?, ?, 0, "–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç", ?, ?, 1)
        ''', (message.from_user.id, budget, registration_date, registration_date))
        conn.commit()

        bot.send_message(message.chat.id, '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!')
        user_file_name = str(message.from_user.id) + '.txt'
        with open(f'C:/Users/–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å/PycharmProjects/aaaaa/users/{str(user_file_name)}', 'w') as user_file:
            user_file.write('')
        user_file.close()
    except ValueError:
        bot.send_message(message.chat.id, '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –±—é–¥–∂–µ—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.')


@bot.message_handler(commands=['info'])
def start(message):
    user = message.from_user

    photo_path = 'C:/Users/–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å/PycharmProjects/aaaaa/musor/c5fcbc4b-28ba-4d9b-a434-e25353c42cb3.jfif'
    photo_caption = f"{return_time()}, {user.first_name}!\n\n" \
                    f"–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:\n\n" \
                    f"information: None\n" \
                    f"Name: {user.first_name}\n" \
                    f"Your tg id: {user.id}\n\n" \
                    f"in development\n\n" \
                    f"–î–ª—è –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏—è —Å–æ —Å–≤–æ–∏–º–∏ —Ñ–∏–Ω–∞–Ω—Å–∞–º–∏ –∏ —Ä–∞—Å—Ö–æ–¥–∞–º–∏, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /rashod"
    with open(photo_path, 'rb') as photo:
        bot.send_photo(message.chat.id, photo, caption=photo_caption)


@bot.message_handler(commands=['kurs'])
def kurs(message):
    photo_path = 'C:/Users/–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å/PycharmProjects/aaaaa/musor/e41bb881-a9a2-467a-87c8-92e870f618ee.jfif'
    text = f'–ö—É—Ä—Å—ã –≤–µ–¥—É—â–∏—Ö –≤–∞–ª—é—Ç\n' \
           f'–û–±–Ω–æ–≤–ª–µ–Ω–æ {print_current_date()} {print_current_time()}\n\n' \
           f'üí∞ USD - {function_return_valutes()[0].value} ‚ÇΩ\n' \
           f'üí∞ EUR - {function_return_valutes()[1].value} ‚ÇΩ\n' \
           f'üí∞ GBP - {function_return_valutes()[2].value} ‚ÇΩ\n' \
           f'üí∞ KZT - {function_return_valutes()[3].value} ‚ÇΩ\n' \
           f'üí∞ GEL - {function_return_valutes()[4].value} ‚ÇΩ \n' \
           f'üí∞ TRY - {function_return_valutes()[5].value} ‚ÇΩ \n' \
           f'üí∞ CNY - {function_return_valutes()[6].value} ‚ÇΩ\n' \
           f'üí∞ JPY - {function_return_valutes()[7].value} ‚ÇΩ\n'
    with open(photo_path, 'rb') as photo:
        bot.send_photo(message.chat.id, photo, caption=text)


@bot.message_handler(commands=['schet'])
def schet(message):
    user = message.from_user

    photo_path = 'C:/Users/–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å/PycharmProjects/aaaaa/musor/349ce560-36a7-4f19-8550-e16c1889d4e7.jfif'
    text = f'{user.first_name}, –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö —Å—á–µ—Ç–æ–≤ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–µ–º–Ω–æ–≥–æ –ø–æ–∑–∂–µ.'
    with open(photo_path, 'rb') as photo:
        bot.send_photo(message.chat.id, photo, caption=text)


@bot.message_handler(commands=['help'])
def __help(message):
    photo_path = 'C:/Users/–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å/PycharmProjects/aaaaa/musor/vI3cGKkkClY.jpg'
    text = f'‚úîÔ∏è–ü–æ–º–æ—â—å –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –±–æ—Ç—É:‚úîÔ∏è \n\n' \
           f'‚ÄºÔ∏è–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ç–æ–π –∏–ª–∏ –∏–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –í–∞–º —Å–ª–µ–¥—É–µ—Ç –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–æ–º–∞–Ω–¥—É —Ä—è–¥–æ–º —Å –µ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ–º.\n\n' \
           f'üî∏–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª:üî∏\n\n' \
           f'‚≠ê –°–æ–≤–µ—Ç—ã –∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —Ç–µ—Ä–º–∏–Ω—ã - –∫–æ–º–∞–Ω–¥–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.\n' \
           f'‚≠ê –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: /info\n' \
           f'‚≠ê –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —Ä–∞—Å—Ö–æ–¥—ã –∏ –¥–æ—Ö–æ–¥—ã - /rashod\n' \
           f'‚≠ê –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö —Ü–µ–ª–µ–π –∏ –∑–∞–¥–∞—á –Ω–∞ —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü - –∫–æ–º–∞–Ω–¥–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ\n' \
           f'‚≠ê –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö —Å–±–µ—Ä–µ–∂–µ–Ω–∏–π –∏ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã—Ö –∫–æ—à–µ–ª—å–∫–æ–≤ -  /schet\n' \
           f'‚≠ê –í—ã–≤–æ–¥ —Ç–µ–∫—É—â–µ–≥–æ –∫—É—Ä—Å–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –≤–∞–ª—é—Ç - /kurs\n' \
           f'‚≠ê –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–≤–æ–∏—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤ –∏ –¥–æ—Ö–æ–¥–æ–≤ - /refactor\n' \
           f'‚≠ê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–≤–æ–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π - /settings\n\n' \
           f'üî∏–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –±–æ—Ç—É:üî∏\n\n' \
           f'–ë–æ—Ç –Ω–∞–ø–∏—Å–∞–Ω –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è –∏ —Å–ª–µ–∂–∫–æ–π –∑–∞ —Å–≤–æ–∏–º–∏ —Ñ–∏–Ω–∞–Ω—Å–∞–º–∏.\n'
    with open(photo_path, 'rb') as photo:
        bot.send_photo(message.chat.id, photo, caption=text)


@bot.message_handler(commands=['rashod'])
def rashod(message):
    user = message.from_user
    cursor.execute('SELECT * FROM users WHERE tg_id=?', (user.id,))
    row = cursor.fetchone()

    if row is not None:
        budget = row[2]
        current_expense = row[3]
        last_purchase = row[4]
        last_update_date = row[6]

        photo_path = 'C:/Users/–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å/PycharmProjects/aaaaa/musor/e41bb881-a9a2-467a-87c8-92e870f618ee.jfif'
        with open(photo_path, 'rb') as photo:
            bot.send_photo(
                message.chat.id,
                photo,
                caption=f'{return_time()}, {user.first_name}\n\n'
                        f'–¢–≤–æ–∏ —Ç–µ–∫—É—â–∏–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —Ä–∞—Å—Ö–æ–¥—ã: \n\n'
                        f'‚öôÔ∏è {user.first_name}, —Ç–≤–æ–∏ —Ä–∞—Å—Ö–æ–¥—ã –∑–∞ —ç—Ç–æ—Ç –º–µ—Å—è—Ü....:‚öôÔ∏è \n'
                        f'üíª ID: {user.id}\n'
                        f'üí∏ –ë—é–¥–∂–µ—Ç –Ω–∞ —ç—Ç–æ—Ç –º–µ—Å—è—Ü   : {budget}\n'
                        f'üí∞ –¢–µ–∫—É—â–∏–π —Ä–∞—Å—Ö–æ–¥ –≤ —ç—Ç–æ–º –º–µ—Å—è—Ü–µ: {current_expense}\n'
                        f'‚åöÔ∏è –î–∞—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±—é–¥–∂–µ—Ç–∞: {last_update_date}\n'
                        f'üè∑ –ü–æ—Å–ª–µ–¥–Ω—è—è –ø–æ–∫—É–ø–∫–∞: {last_purchase}'
            )
    else:
        bot.reply_to(message, '–í—ã –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã! –í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.')


@bot.message_handler(commands=['add_b'])
def add_budget(message):
    user = message.from_user
    command_args = message.text.split()

    if len(command_args) < 2:
        bot.reply_to(message, '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã. –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫ –±—é–¥–∂–µ—Ç—É.')
        return

    try:
        amount = int(command_args[1])
    except ValueError:
        bot.reply_to(message, '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Å—É–º–º—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ.')
        return

    cursor.execute('SELECT * FROM users WHERE tg_id=?', (user.id,))
    row = cursor.fetchone()

    if row is not None:
        budget = row[2]

        updated_budget = budget + amount

        current_time = datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')
        cursor.execute('UPDATE users SET budget=?, last_update_date=? WHERE tg_id=?',
                       (updated_budget, current_time, user.id))
        conn.commit()

        bot.reply_to(message, f'–ë—é–¥–∂–µ—Ç —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω. –¢–µ–∫—É—â–∏–π –±—é–¥–∂–µ—Ç: {updated_budget}')
    else:
        bot.reply_to(message, '–í—ã –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã! –í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.')


@bot.message_handler(commands=['add_r'])
def add_expense(message):
    user = message.from_user
    command_args = message.text.split()

    if len(command_args) < 3:
        bot.reply_to(message, '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã. –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –∏ –æ–ø–∏—Å–∞–Ω–∏–µ –ø–æ–∫—É–ø–∫–∏.')
        return

    try:
        amount = int(command_args[1])
    except ValueError:
        bot.reply_to(message, '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Å—É–º–º—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ.')
        return

    description = ' '.join(command_args[2:])
    with open(f'C:/Users/–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å/PycharmProjects/aaaaa/users/{str(user.id) + ".txt"}', 'w') as user_file:

        user_file.write(f'{description} - {datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")}')
    user_file.close()

    cursor.execute('SELECT * FROM users WHERE tg_id=?', (user.id,))
    row = cursor.fetchone()

    if row is not None:
        current_expense = row[3]
        budget = row[2]
        update_budget = budget - amount
        updated_expense = current_expense + amount



        cursor.execute('UPDATE users SET expense=?, budget=?, last_purchase=? WHERE tg_id=?',
                       (updated_expense, update_budget, description, user.id))
        conn.commit()

        bot.reply_to(message, f'–†–∞—Å—Ö–æ–¥ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω. –¢–µ–∫—É—â–∏–π —Ä–∞—Å—Ö–æ–¥: {updated_expense}')
    else:
        bot.reply_to(message, '–í—ã –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã! –í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.')


@bot.message_handler(commands=['history'])
def add_expense(message):
    user = message.from_user
    with open(f'C:/Users/–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å/PycharmProjects/aaaaa/users/{str(user.id) + ".txt"}', 'r') as user_file:
        user_file.readlines()
    print(user_file.readlines())
    user_file.close()


bot.polling()
